---
name: Test Container Builds

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:

  hadolint:
    name: Hadolint (Dockerfiles)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.6.0
        name: pw_discord_bot
        with:
          dockerfile: docker/pw_discord_bot/Dockerfile
          ignore: DL3007
          format: tty
      - uses: hadolint/hadolint-action@v1.6.0
        name: pw_ingest
        with:
          dockerfile: docker/pw_ingest/Dockerfile
          ignore: DL3007
          format: tty
      - uses: hadolint/hadolint-action@v1.6.0
        name: pw_router
        with:
          dockerfile: docker/pw_router/Dockerfile
          ignore: DL3007
          format: tty
      - uses: hadolint/hadolint-action@v1.6.0
        name: pw_ws_broker
        with:
          dockerfile: docker/pw_ws_broker/Dockerfile
          ignore: DL3007
          format: tty

  gochecks:
    name: Go Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
          check-latest: true
      - name: go vet
        run: go vet -v ./...
      - name: go test
        run: go test -v ./...
      - name: go test (with race detection)
        run: go test -v -race ./...

  test_build:
    name: Test Build
    runs-on: ubuntu-latest
    needs: [hadolint, gochecks]
    strategy:
      matrix:
        image:
          - pw_discord_bot
          - pw_ingest
          - pw_router
          - pw_ws_broker
        arch:
          - linux/amd64
          - linux/arm64

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Test Build
      - name: Test Build - ${{ matrix.image }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/${{ matrix.image }}/Dockerfile
          no-cache: true
          platforms: ${{ matrix.arch }}
          push: false
          tags: test_${{ matrix.image }}_${{ matrix.arch }}
          labels: ${{ steps.meta.outputs.labels }}
